#!/bin/bash

# Version bumping script
# Usage: version-bump [major|minor|patch]

set -e

if [[ ! -f "VERSION" ]]; then
    echo "Error: VERSION file not found"
    exit 1
fi

CURRENT_VERSION=$(cat VERSION)
if [[ ! "$CURRENT_VERSION" =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
    echo "Error: Invalid version format in VERSION file: $CURRENT_VERSION"
    echo "Version must follow format: vX.Y.Z (e.g., v1.2.3)"
    exit 1
fi

MAJOR=${BASH_REMATCH[1]}
MINOR=${BASH_REMATCH[2]}
PATCH=${BASH_REMATCH[3]}

BUMP_TYPE="${1:-patch}"

case "$BUMP_TYPE" in
    major)
        NEW_MAJOR=$((MAJOR + 1))
        NEW_MINOR=0
        NEW_PATCH=0
        ;;
    minor)
        NEW_MAJOR=$MAJOR
        NEW_MINOR=$((MINOR + 1))
        NEW_PATCH=0
        ;;
    patch)
        NEW_MAJOR=$MAJOR
        NEW_MINOR=$MINOR
        NEW_PATCH=$((PATCH + 1))
        ;;
    *)
        echo "Error: Invalid bump type: $BUMP_TYPE"
        echo "Usage: $0 [major|minor|patch]"
        echo "  major: 1.2.3 -> 2.0.0"
        echo "  minor: 1.2.3 -> 1.3.0"
        echo "  patch: 1.2.3 -> 1.2.4"
        exit 1
        ;;
esac

NEW_VERSION="v${NEW_MAJOR}.${NEW_MINOR}.${NEW_PATCH}"

echo "Current version: $CURRENT_VERSION"
echo "New version: $NEW_VERSION"
echo "Bump type: $BUMP_TYPE"

# Update VERSION file
echo "$NEW_VERSION" > VERSION

echo "Updated VERSION file to: $NEW_VERSION"
echo ""
echo "Next steps:"
echo "1. Make your changes"
echo "2. Test: go test ./... -v"
echo "3. Dry run: ./buildtools/build-goreleaser.sh dry-run"
echo "4. Commit: git add . && git commit -m \"feat: changes for $NEW_VERSION\""
echo "5. Tag: git tag $NEW_VERSION"
echo "6. Push: git push origin master && git push origin $NEW_VERSION"
echo "7. Release: ./buildtools/build-goreleaser.sh release"